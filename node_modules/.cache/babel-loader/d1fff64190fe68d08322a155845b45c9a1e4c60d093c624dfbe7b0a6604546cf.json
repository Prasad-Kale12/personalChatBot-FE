{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getMessageFromAssistant } from \"../routes/assistantServices\";\nimport { photos } from '../utils/photos';\nexport default {\n  data() {\n    return {\n      isLoading: false,\n      message: \"\",\n      linkForPhoto: \"\",\n      messages: []\n    };\n  },\n  methods: {\n    async sendMessage() {\n      this.isLoading = true;\n      if (this.message.trim() !== \"\") {\n        this.messages.push({\n          text: this.message,\n          type: \"user-message\"\n        });\n        const mesg = this.message;\n        this.message = \"\";\n        const res = await getMessageFromAssistant(mesg);\n        this.messages.push({\n          text: res.status === 200 && res.data.message ? res.data.message : \"Sorry, I couldn't understand your question\",\n          type: \"ai-message\"\n        });\n        this.isLoading = false;\n        this.scrollToBottom();\n      }\n    },\n    getRandomImage() {\n      return photos[Math.floor(Math.random() * photos.length)];\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatBox = this.$refs.chatBox;\n        chatBox.scrollTop = chatBox.scrollHeight;\n      });\n    }\n  }\n};","map":{"version":3,"names":["getMessageFromAssistant","photos","data","isLoading","message","linkForPhoto","messages","methods","sendMessage","trim","push","text","type","mesg","res","status","scrollToBottom","getRandomImage","Math","floor","random","length","$nextTick","chatBox","$refs","scrollTop","scrollHeight"],"sources":["/home/prasad/My Project/chat-application/src/components/ChatComponent.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"chat-container\">\n      <div class=\"left-section\">\n        <img  src=\"../assets/aiChat.jpg\" alt=\"AI Assistant\" class=\"avatar\" />\n\n      </div>\n      <div class=\"right-section\">\n        <section class=\"header\">\n          <h1>Prasad's AI Assistant</h1>\n          <p>Ask me anything about my personal and professional journey.</p>\n        </section>\n        <div class=\"chat-box\" ref=\"chatBox\">\n          <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"msg.type\">\n            <p>{{ msg.text }}</p>\n          </div>\n        </div>\n        <div class=\"input-box-container\">\n          <input :disabled=\"isLoading\" type=\"text\" v-model=\"message\" placeholder=\"Type your message here...\"\n            @keyup.enter=\"sendMessage\" />\n          <button v-if=\"!isLoading\" @click=\"sendMessage\">Send</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport { getMessageFromAssistant } from \"../routes/assistantServices\";\nimport { photos } from '../utils/photos'\n\nexport default {\n  data() {\n    return {\n      isLoading: false,\n      message: \"\",\n      linkForPhoto: \"\",\n      messages: []\n    };\n  },\n  methods: {\n    async sendMessage() {\n      this.isLoading = true;\n      if (this.message.trim() !== \"\") {\n        this.messages.push({ text: this.message, type: \"user-message\" });\n        const mesg = this.message;\n        this.message = \"\";\n        const res = await getMessageFromAssistant(mesg);\n\n        this.messages.push({\n          text: res.status === 200 && res.data.message ? res.data.message : \"Sorry, I couldn't understand your question\",\n          type: \"ai-message\"\n        });\n        this.isLoading = false;\n         this.scrollToBottom()\n      }\n    },\n    getRandomImage() {\n\n      return photos[Math.floor(Math.random() * photos.length)];\n    },\n\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatBox = this.$refs.chatBox;\n        chatBox.scrollTop = chatBox.scrollHeight;\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  /* background: linear-gradient(135deg, #1e3c72, #2a5298, #6dd5ed); */\n  padding: 20px;\n}\n\n@keyframes gradientAnimation {\n  0% {\n    background-position: 0% 50%;\n  }\n\n  100% {\n    background-position: 100% 50%;\n  }\n}\n\n.chat-container {\n  display: flex;\n  width: 60%;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.left-section {\n  width: 40%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #a578ec, #dbc1ec);\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  animation: gradientAnimation 3s infinite alternate;\n}\n.grayAutomation {\n  width: 40%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #dad9db, #ecdcc9);\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  animation: gradientAnimation 3s infinite alternate;\n}\n\n.right-section {\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n}\n\n.header {\n  text-align: center;\n}\n\n.avatar {\n  width: 80%;\n  max-width: 250px;\n  border-radius: 10%;\n}\n\n.chat-box {\n  flex-grow: 1;\n  overflow-y: auto;\n  height: 300px;\n  padding: 10px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.user-message {\n  background: linear-gradient(135deg, #a578ec, #c7aed8);\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: flex-end;\n  animation: gradientAnimation 3s infinite alternate;\n\n}\n\n.ai-message {\n  background: linear-gradient(135deg, #e03a50, #eba197);\n  animation: gradientAnimation 3s infinite alternate;\n\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: flex-start;\n}\n\n.input-box-container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\nbutton {\n  background: linear-gradient(135deg, #a578ec, #dbc1ec);\n  animation: gradientAnimation 3s infinite alternate;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\nbutton:hover {\n  background: linear-gradient(135deg, #e03a50, #eba197);\n}\n</style>\n"],"mappings":";AA6BA,SAASA,uBAAsB,QAAS,6BAA6B;AACrE,SAASC,MAAK,QAAS,iBAAgB;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACL,SAAQ,GAAI,IAAI;MACrB,IAAI,IAAI,CAACC,OAAO,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAC9B,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC;UAAEC,IAAI,EAAE,IAAI,CAACP,OAAO;UAAEQ,IAAI,EAAE;QAAe,CAAC,CAAC;QAChE,MAAMC,IAAG,GAAI,IAAI,CAACT,OAAO;QACzB,IAAI,CAACA,OAAM,GAAI,EAAE;QACjB,MAAMU,GAAE,GAAI,MAAMd,uBAAuB,CAACa,IAAI,CAAC;QAE/C,IAAI,CAACP,QAAQ,CAACI,IAAI,CAAC;UACjBC,IAAI,EAAEG,GAAG,CAACC,MAAK,KAAM,GAAE,IAAKD,GAAG,CAACZ,IAAI,CAACE,OAAM,GAAIU,GAAG,CAACZ,IAAI,CAACE,OAAM,GAAI,4CAA4C;UAC9GQ,IAAI,EAAE;QACR,CAAC,CAAC;QACF,IAAI,CAACT,SAAQ,GAAI,KAAK;QACrB,IAAI,CAACa,cAAc,CAAC;MACvB;IACF,CAAC;IACDC,cAAcA,CAAA,EAAG;MAEf,OAAOhB,MAAM,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAInB,MAAM,CAACoB,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEDL,cAAcA,CAAA,EAAG;MACf,IAAI,CAACM,SAAS,CAAC,MAAM;QACnB,MAAMC,OAAM,GAAI,IAAI,CAACC,KAAK,CAACD,OAAO;QAClCA,OAAO,CAACE,SAAQ,GAAIF,OAAO,CAACG,YAAY;MAC1C,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}